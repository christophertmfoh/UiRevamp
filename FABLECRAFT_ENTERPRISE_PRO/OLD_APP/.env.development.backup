# FableCraft World Bible - Environment Configuration Template
# Copy this file to .env.development or .env.production and fill in the actual values

# =============================================================================
# ðŸš¨ CRITICAL: NEVER COMMIT ACTUAL SECRETS TO VERSION CONTROL
# =============================================================================

# ===== APPLICATION CONFIGURATION =====
NODE_ENV=development
PORT=5000
CLIENT_PORT=3000
HOST=localhost
DEBUG=false

# ===== DATABASE CONFIGURATION =====
# Production: Use actual PostgreSQL connection string
# Development: Use "mock" for in-memory storage
DATABASE_URL=mock

# Docker PostgreSQL settings (only if using Docker)
POSTGRES_DB=fablecraft
POSTGRES_USER=fablecraft
POSTGRES_PASSWORD=ZM8f,w(|5Cz|N_eq_MJX

# ===== AUTHENTICATION & SECURITY =====
# CRITICAL: Generate secure random values for production
# Use: openssl rand -base64 32
JWT_SECRET=3q1o/HKrPyDrMRRLLqbmZPGpFZ6t8hnSxqQhSO7KU0k=
ENCRYPTION_KEY=688d4e7c44aaab62f871ad155f2ed47bf9494ada3d9a3e574f97d7fc8c6ccc5b

# Development only - NEVER use in production
DISABLE_AUTH=true

# ===== AI SERVICES =====
# Google Gemini AI (Required for AI features)
GEMINI_API_KEY=your-gemini-api-key-here

# OpenAI (Optional - for image generation)
OPENAI_API_KEY=your-openai-api-key-here

# ===== CACHING & PERFORMANCE =====
# Redis for caching and sessions
REDIS_URL=redis://localhost:6379

# Cache settings
CACHE_TTL=3600
SESSION_TTL=86400

# Performance tuning
CLUSTER_WORKERS=auto
MAX_CONNECTIONS=20
MEMORY_LIMIT=512mb

# ===== FILE STORAGE =====
UPLOAD_PATH=./uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,pdf

# ===== DEVELOPMENT SETTINGS =====
# Frontend API URL
VITE_API_URL=http://localhost:5000

# Mock services for development
MOCK_DATABASE=true

# ===== PRODUCTION SETTINGS =====
# Logging
LOG_LEVEL=info

# Error monitoring (Sentry)
SENTRY_DSN=your-sentry-dsn-here

# Monitoring ports
PROMETHEUS_PORT=9090

# ===== SSL & SECURITY (Production) =====
SSL_CERT_PATH=/path/to/ssl/cert.pem
SSL_KEY_PATH=/path/to/ssl/private.key

# CORS configuration
CORS_ORIGINS=*

# Rate limiting
RATE_LIMIT_WINDOW=900000
RATE_LIMIT_MAX=100

# ===== MONITORING (Optional) =====
# Grafana admin password
GRAFANA_PASSWORD=admin

# ===== FEATURE FLAGS =====
# Enable/disable specific features
ENABLE_AI_GENERATION=true
ENABLE_IMAGE_UPLOAD=true
ENABLE_USER_REGISTRATION=true

# =============================================================================
# ðŸ“‹ QUICK SETUP INSTRUCTIONS:
#
# 1. Copy this file:
#    cp .env.example .env.development
#
# 2. Generate secure secrets:
#    JWT_SECRET: openssl rand -base64 32
#    ENCRYPTION_KEY: openssl rand -hex 32
#
# 3. Add your API keys:
#    - Get Gemini API key from Google AI Studio
#    - Get OpenAI API key from OpenAI dashboard (optional)
#
# 4. For production, use strong passwords and secure hosting
#
# 5. Validate your configuration:
#    npm run validate-env
# =============================================================================
SESSION_SECRET=JcyS2Uiay0FDL8uLkJakoA1bSG+m8LK2
INTERNAL_API_KEY=U4YTbCJdDHykEMNX6k35X7s1dI0uJF2jPCBFb7ho